name: Update File Workflow

on:
  repository_dispatch:
    types: [update_file]

jobs:
  update-file:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Get current branch
      id: vars
      run: echo "::set-output name=branch::$(git rev-parse --abbrev-ref HEAD)"

    - name: Update File Content
      env:
        FILE_PATH: ${{ github.event.client_payload.file_path }}
        FILE_CONTENT: ${{ toJson(github.event.client_payload.file_content) }}
      run: |
        echo '${{ env.FILE_CONTENT }}' > '${{ env.FILE_PATH }}'
        git config --global user.name "GitHub Actions"
        git config --global user.email "action@github.com"

    # 检查并移除文件内容的BOM
    - name: Remove BOM from file content
      if: ${{ contains(github.event.client_payload.file_path, '.txt') || contains(github.event.client_payload.file_path, '.csv') }} # 示例检查文本或CSV文件
      run: |
        file_with_bom="$FILE_PATH"
        file_without_bom="${file_with_bom%.txt}_no_bom.txt" # 示例修改扩展名来创建新文件名
        sed -i 's/\xEF\xBB\xBF//' "$file_with_bom" # 假设文件是UTF-8编码，移除BOM
        echo "BOM removed from $file_with_bom, new file created as $file_without_bom"
        echo "::set-output name=cleaned_file_path::$file_without_bom" >> $GITHUB_OUTPUT # 输出新文件路径到GITHUB_OUTPUT

    - name: Commit and Push Changes
      env:
        COMMIT_MSG_FILE: commit_message.txt
      run: |
        # 使用新文件路径（如果有BOM移除步骤）
        cleaned_file_path=$(cat $GITHUB_STEP_SUMMARY | grep -oP 'cleaned_file_path::\K[^ ]+')
        [[ -n "$cleaned_file_path" ]] && FILE_PATH=$cleaned_file_path
        
        git add "${FILE_PATH}"
        
        # 准备提交消息
        echo "Update $FILE_PATH via GitHub Actions" > $COMMIT_MSG_FILE
        git add $COMMIT_MSG_FILE
        
        git commit -F $COMMIT_MSG_FILE
        git push origin ${{ steps.vars.outputs.branch }}
